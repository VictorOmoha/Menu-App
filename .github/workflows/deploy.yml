name: CI/CD - Build and Deploy to Cloudflare Pages

on: push: branches: [ main ] pull_request: branches: [ main ] workflow_dispatch:

concurrency: group: pages-${{ github.ref }} cancel-in-progress: true

jobs: build: name: Build runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v4 - name: Setup Node uses: actions/setup-node@v4 with: node-version: '20' cache: 'npm' - name: Install dependencies run: npm ci - name: Build run: npm run build

deploy: name: Deploy to Cloudflare Pages if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request' runs-on: ubuntu-latest needs: build permissions: contents: read deployments: write env: CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }} CF_PAGES_PROJECT: ${{ secrets.CF_PAGES_PROJECT }} steps: - name: Checkout uses: actions/checkout@v4 - name: Setup Node uses: actions/setup-node@v4 with: node-version: '20' cache: 'npm' - name: Install dependencies run: npm ci

  # Debug: confirm secrets presence (token will not be printed)
  - name: Debug secrets presence (safe)
    run: |
      echo "CF_PAGES_PROJECT=${CF_PAGES_PROJECT:-<empty>}"
      if [ -z "${CLOUDFLARE_API_TOKEN}" ]; then
        echo "CLOUDFLARE_API_TOKEN is missing" && exit 1
      else
        echo "CLOUDFLARE_API_TOKEN is set"
      fi

  # Debug: verify Cloudflare auth and account visibility
  - name: Wrangler whoami (debug)
    run: npx --yes wrangler@4.32.0 --verbose whoami

  # Optional (if supported): list projects for extra visibility
  - name: Wrangler projects (debug)
    run: npx --yes wrangler@4.32.0 --verbose pages project list || true

  - name: Build (confirm dist exists)
    run: |
      npm run build
      test -d dist || (echo "dist/ missing" >&2; exit 1)

  - name: Deploy with Wrangler (verbose)
    run: |
      if [ -z "${CF_PAGES_PROJECT}" ]; then
        echo "CF_PAGES_PROJECT is empty" >&2
        exit 1
      fi
      npx --yes wrangler@4.32.0 --verbose pages deploy dist --project-name "${CF_PAGES_PROJECT}" --commit-dirty=true
